---
title: "Meldeeimer"
author: "Hürth"
lang: de
format: 
  dashboard:
    logo: inputs/meldeeimer_logo.svg
    orientation: columns
    theme: litera
    embed-resources: true
---

```{r}
#| include: false
# set local and timezone
Sys.setlocale("LC_TIME", "German.UTF-8")
Sys.setenv(TZ = "Europe/Berlin")

# save time of run to document
time_current <- Sys.time()
time_24h_ago <- time_current - 24*60*60

# import functions
source("meldee_get_bin_metadata.R")
source("meldee_get_reports.R")
```

```{r}
# get bin metadata
bins <- meldee_get_bin_metadata()

# get reports
reports <- meldee_get_reports()
```

```{r}
# keep only reports with valid UUID
reports <- subset(reports, uuid %in% bins$uuid)

# merge bin metadata to individual reports
reports <- merge(reports, bins, by = "uuid")

# aggregate reports for every bin
reports$count <- 1
reports_sum <- aggregate(count ~ uuid + bin_id + lon + lat, data = reports, FUN = length)
```

# Übersicht {width=25%}

## KPI

```{r}
#| component: valuebox
#| title: "Meldungen insg."
list(
  icon = "flag",
  color = "danger",
  value = as.numeric(nrow(reports))
)
```

```{r}
#| component: valuebox
#| title: "Mülleimer insg."
list(
  icon = "trash",
  color = "warning",
  value = as.numeric(nrow(reports_sum))
)
```

```{r}
#| component: valuebox
#| title: "Meldungen < 24h"
list(
  icon = "clock-history",
  color = "secondary",
  value = as.numeric(nrow(reports[reports$datetime >= time_24h_ago, ]))
)
```

## Heatmap {width=75%}

```{r}
cat("title=", "Meldungen seit: 2. August 2024")

# create a color palette for the values
pal <- leaflet::colorNumeric(palette = "plasma", domain = reports_sum$count)

# compute the convex hull to identify outer most points
hull_indices <- chull(bins$lon, bins$lat)
hull_indices <- c(hull_indices, hull_indices[1])  # close polygon
border <- bins[hull_indices, ] # extract the border coordinates

# create heatmap of overall reports
leaflet::leaflet(reports_sum) |>
  leaflet::addTiles() |>
  leaflet::addPolygons(lng = border$lon,
                       lat = border$lat,
                       fillOpacity = 0.1) |>
  # bounds <- sf::read_sf("inputs/huerth_admin_boundaries.geojson")
  # leaflet::addPolygons(data = bounds, fillOpacity = .1) |>
  leaflet::addCircleMarkers(
    lng = ~ lon,
    lat = ~ lat,
    radius = ~ sqrt(count) * 5,
    label = ~ paste0(bin_id, ": ", count, ifelse(count == 1, " Meldung", " Meldungen")),
    color = ~ pal(count),
#    clusterOptions = leaflet::markerClusterOptions(),
    stroke = FALSE,
    fillOpacity = .75
  ) |>
  leaflet::addLegend(
    "bottomright",
    pal = pal,
    values = ~ count,
    title = "Meld-<br>ungen",
    opacity = 1  )
```

::: {expandable="false" style="font-size: 65%; text-align: right;"}
Zuletzt aktualisiert: `r format(time_current, "%d.%m.%Y, %H:%M")` Uhr.<br>Gefördert von [un:box cologne](https://www.stadt-koeln.de/leben-in-koeln/unbox-cologne/index.html).<br>[Hintergrund](https://meldeeimer.de/huerth) - [Impressum](https://meldeeimer.de/impressum) - [Datenschutz](https://meldeeimer.de/datenschutz)
:::

# Tabelle {orientation="rows"}

```{r}
# create link to OSM
reports$location <- paste0(
  '<a href="https://www.openstreetmap.org/?mlat=',
  reports$lat,
  '&mlon=',
  reports$lon,
  "#map=14/",
  reports$lat,
  "/",
  reports$lon,
  '" target="_blank">',
  paste(reports$lat, reports$lon, sep = ", "),
  '</a>'
)

# separate date and time for better readability
reports$date <- as.Date(reports$datetime)
reports$time <- format(reports$datetime, format = "%H:%M:%S")

# sort last report on top
reports <- reports[order(reports$datetime, decreasing = TRUE), ]

# print table
DT::datatable(
  reports[, c("date", "time", "bin_id", "response", "location")],
  escape = FALSE,
  colnames = c("Datum", "Uhrzeit", "Mülleimer-Nr.", "Meldegrund", "Standort"),
  rownames = FALSE,
  filter = "top",
  extensions = 'Buttons',
  callback = DT::JS('
    $(\'div.has-feedback input[type="search"]\').attr("placeholder", "(alle)");
    $(\'div.has-feedback input[type="search"]\').css({
      "font-size": "0.8em",
      "text-align": "right"
    });
  '),
  options = list(
    dom = "Bitp",
    buttons = c('csv', 'excel', 'pdf'),
    searchHighlight = TRUE,
    pageLength = 10,
    columnDefs = list(list(
      className = 'dt-right', targets = '_all'
    )),
    language = list(url = "//cdn.datatables.net/plug-ins/2.1.3/i18n/de-DE.json", info = "_TOTAL_ Meldungen")
  )
)
```

::: {expandable="false" style="font-size: 65%; text-align: right;"}
Zuletzt aktualisiert: `r format(time_current, "%d.%m.%Y, %H:%M")` Uhr.<br>Gefördert von [un:box cologne](https://www.stadt-koeln.de/leben-in-koeln/unbox-cologne/index.html).<br>[Hintergrund](https://meldeeimer.de/huerth) - [Impressum](https://meldeeimer.de/impressum) - [Datenschutz](https://meldeeimer.de/datenschutz)
:::
